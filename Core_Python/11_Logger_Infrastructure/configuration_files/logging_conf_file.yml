version: 1
formatters:
  simple:
    format: '%(asctime)s  -->>> %(name)s - %(levelname)s - %(message)s'
#    format: '%(asctime)s  -->>>  %(message)s'
  stdout :
    format: '%(asctime)s : %(levelname)s : %(funcName)s : %(message)s'

handlers:
#  working console handler -->
#  console:
#    class: logging.StreamHandler
#    level: DEBUG
#    formatter: simple
#    stream: ext://sys.stdout

#  file:
#    class: logging.fileHandler
#    level: DEBUG
#    formatter: simple

# lets try

  console:
    class : logging.StreamHandler
    formatter: simple
    level   : INFO
#    filters: [allow_foo]
    stream  : ext://sys.stdout

#    This is working fine for file handler without using rotating
  file:
#    class : logging.handlers.RotatingFileHandler
    class : logging.FileHandler
    formatter: stdout
    level: INFO
    filename: new_new_logconfig.log
    mode: w

#    maxBytes: 1024
#    backupCount: 3

# Not working need to see for file handler
#  file:
#    class : logging.handlers.RotatingFileHandler
##    class : logging.FileHandler
#    formatter: stdout
#    level: INFO
#    filename: new_new_logconfig.log
#    mode: w
#    maxBytes: 1024
#    backupCount: 5
#

loggers:
  sampleLogger:
    level: DEBUG
    handlers: [console, file]
    propagate: no

root:
  level: WARNING
  handlers: [console]

#{
#	'formatter': {
#		'simple': {
#			'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
#		},
#		'handlers': {
#			'console': {
#				'class': 'logging.StreamHandler',
#				'level': 'DEBUG',
#				'formatter': 'simple',
#				'stream': 'ext://sys.stdout'
#			},
#			'file': {
#				'class': 'logging.fileHandler',
#				'level': 'DEBUG',
#				'formatter': 'simple'
#			}
#		},
#		'loggers': {
#			'sampleLogger': {
#				'level': 'DEBUG',
#				'handlers': ['console'],
#				'propagate': False
#			}
#		},
#		'root': {
#			'level': 'DEBUG',
#			'handlers': ['console']
#		}
#	}
#}
